// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MemosColumns holds the columns for the "memos" table.
	MemosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 512},
		{Name: "content", Type: field.TypeString, Size: 20000},
		{Name: "owner_id", Type: field.TypeUUID},
	}
	// MemosTable holds the schema information for the "memos" table.
	MemosTable = &schema.Table{
		Name:       "memos",
		Columns:    MemosColumns,
		PrimaryKey: []*schema.Column{MemosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "memos_users_memos",
				Columns:    []*schema.Column{MemosColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 64},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 256},
		{Name: "user_name", Type: field.TypeString, Size: 800},
		{Name: "given_name", Type: field.TypeString, Nullable: true, Size: 800},
		{Name: "family_name", Type: field.TypeString, Nullable: true, Size: 800},
		{Name: "photo_url", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"client", "operator"}, Default: "client"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// MemoTagsColumns holds the columns for the "memo_tags" table.
	MemoTagsColumns = []*schema.Column{
		{Name: "memo_id", Type: field.TypeUUID},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// MemoTagsTable holds the schema information for the "memo_tags" table.
	MemoTagsTable = &schema.Table{
		Name:       "memo_tags",
		Columns:    MemoTagsColumns,
		PrimaryKey: []*schema.Column{MemoTagsColumns[0], MemoTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "memo_tags_memo_id",
				Columns:    []*schema.Column{MemoTagsColumns[0]},
				RefColumns: []*schema.Column{MemosColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "memo_tags_tag_id",
				Columns:    []*schema.Column{MemoTagsColumns[1]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MemosTable,
		TagsTable,
		UsersTable,
		MemoTagsTable,
	}
)

func init() {
	MemosTable.ForeignKeys[0].RefTable = UsersTable
	MemoTagsTable.ForeignKeys[0].RefTable = MemosTable
	MemoTagsTable.ForeignKeys[1].RefTable = TagsTable
}
